/*
	Программа с пояснениями.
	Автор: Туров Виталий Александрович
	Группа: 514
*/

/*
	Задача №3.
	Из целочисленного массива N, между максимальным и минимальным элементом подсчитать количество положительных чисел.
*/

/*
	Псевдо код:
	1. Спросить пользователя о том, какого размера массив;
	2. Создать определённого размера массив;
	3. Пусть пользователь заполнит его случайными числами;
	4. Обработаем массив и найдём индексы максимального элемента массива и минимального;
	5. С самого минимального индекса начнём поиск положительны чисел и подсчитаем их.
*/
#include <locale.h>
#include <Windows.h>
#include <iostream>
#include <ctime>

using namespace std;

// Точка входа

int main(void)
{
	// Зерно рандома
	srand(time(NULL));

	setlocale(LC_ALL, ".1251"); // Установка кодировки windows-1251

	cout << endl << endl << "Экзаменационное задание №3" << endl << endl;

	/*
		Основные данные
	*/
	int *data(NULL);// Указатель на первый элемент массива
	int size(0);// Размер массива

	/*
		Дополнительные данные
	*/
	int indexMinimumElement(0);// Индекс минимального элемента массива
	int minimumElement(0);// Минимальный элемент
	int indexMaximumElement(0);// Индекс максимального элемента массива
	int maximumElement(0);// Максимальный элемент
	int numberElements(0);// Количество элементов между минимальным и максимальным элементов массива
	
	// Запрос у пользователя о размере желаемого массива
	cout << endl << "Пожалуйста, введите размер массива: ";
	cin >> size;
	
	// Создание массива
	data = new int[size];
	
	// Сообщение о том, что происходит заполнение массива
	cout << endl << "Заполнение массива:" << endl;

	// Заполнение массива
	for (int i = 0; i < size; i++)
	{
		// Заполнение массива случайными числами от -100 до 100

		//Формула случайного числа в диапозоне [min, max]:
		//random_number = rand() % (max - min + 1) + min;

		data[i] = rand() % (100 - (-100) + 1) + (-100);
	}
		
	// Поиск минимального
	// Примем условно, что первый элемент массива минимальный
	minimumElement = data[0];

	// Поиск самого маленького элемента массива
	for (int i = 1; i < size; i++)
	{
		// Если текущий элемент массива меньше минимального
		if (data[i] < minimumElement) {
			// Присваиваем минимальному элементу значение текущего и запоминаем его индекс
			minimumElement = data[i];
			indexMinimumElement = i;
		}
	}
	
	// Поиск максимума
	// Примем условно, что первый элемент массива максимальный
	indexMaximumElement = data[0];

	// Поиск самого большого элемента массива
	for (int i = 1; i < size; i++)
	{
		// Если текущий элемент массива больше минимального
		if (data[i] > maximumElement) {
			// Присваиваем максимальному элементу значение текущего и запоминаем его индекс
			maximumElement = data[i];
			indexMaximumElement = i;
		}
	}
	
	// Подсчёт количества положительных элементов
	// Если индекс минимального элемента больше индекса максимального элемента
	if (indexMinimumElement > indexMaximumElement) {

		// Подсчёт количества положительных элементов
		for (int i = indexMaximumElement + 1; i < indexMinimumElement; i++)
		{
			if (data[i] > 0) numberElements++;
		}
	}

	// Если индекс максимального элемента больше индекса минимального элемента
	else if (indexMaximumElement > indexMinimumElement) {

		// Подсчёт количества положительных элементов
		for (int i = indexMinimumElement + 1; i < indexMaximumElement; i++)
		{
			if (data[i] > 0) numberElements++;
		}
	}

	// Вывод сгенерированных элементов массива
	for (int i = 0; i < size; i++)
	{
		if (i < size - 1)
			cout << data[i] << ", ";
		else
			cout << data[i] << endl << endl;
	}
	
	// Вывод результата
	cout << endl << "Минимальный элемент массива: " << minimumElement << ". Его индекс: " << indexMinimumElement << endl
		<< "Максимальный элемент массива: " << maximumElement << ". Его индекс: " << indexMaximumElement << endl
		<< "Количество элементов массива, между масимальным значение и минимальным: " << numberElements << endl;
	
	// Очищение памяти
	delete[] data;

	return 0;
}